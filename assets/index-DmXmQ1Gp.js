var oe=Object.defineProperty;var re=(n,e,t)=>e in n?oe(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t;var p=(n,e,t)=>re(n,typeof e!="symbol"?e+"":e,t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))o(r);new MutationObserver(r=>{for(const s of r)if(s.type==="childList")for(const l of s.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&o(l)}).observe(document,{childList:!0,subtree:!0});function t(r){const s={};return r.integrity&&(s.integrity=r.integrity),r.referrerPolicy&&(s.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?s.credentials="include":r.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function o(r){if(r.ep)return;r.ep=!0;const s=t(r);fetch(r.href,s)}})();class J{constructor(e,t){p(this,"apiKey");p(this,"apiUrl","https://openrouter.ai/api/v1/chat/completions");p(this,"modelPurposeMap",{});this.apiKey=e,t&&(this.modelPurposeMap=t)}setModelPurpose(e,t){this.modelPurposeMap[e]=t}getModelForPurpose(e){return this.modelPurposeMap[e]}async chat(e,t){var i,d,a;const o=this.getModelForPurpose(e);if(!o)throw new Error(`No model configured for purpose: ${e}`);const r={model:o,messages:[{role:"user",content:t}]};return((a=(d=(i=(await this.sendMessage(r)).choices)==null?void 0:i[0])==null?void 0:d.message)==null?void 0:a.content)??""}async sendMessage(e){const t=await fetch(this.apiUrl,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.apiKey}`},body:JSON.stringify(e)});if(!t.ok)throw new Error(`OpenRouter API error: ${t.status} ${t.statusText}`);return t.json()}async fetchModels(){const e=await fetch("https://openrouter.ai/api/v1/models",{headers:{Authorization:`Bearer ${this.apiKey}`}});if(!e.ok)throw new Error(`OpenRouter API error: ${e.status} ${e.statusText}`);return(await e.json()).data}}const F="openrouter_api_key",$="openrouter_model_purposes",O=[{key:"creator",label:"Creator"},{key:"rating",label:"Rating"},{key:"editor",label:"Editor"}];function q(n){const e=[];if(n.prompt){const t=parseFloat(n.prompt);if(!isNaN(t)){const o=t*1e6;e.push(`Input: $${o.toLocaleString(void 0,{maximumFractionDigits:2})} per million tokens`)}}if(n.completion){const t=parseFloat(n.completion);if(!isNaN(t)){const o=t*1e6;e.push(`Output: $${o.toLocaleString(void 0,{maximumFractionDigits:2})} per million tokens`)}}return e}class ne{constructor(e,t,o,r){p(this,"onSelect");p(this,"closeModal");p(this,"apiKey","");p(this,"models",[]);p(this,"loading",!1);p(this,"error",null);p(this,"fetched",!1);p(this,"selectedModels",{});p(this,"root",null);this.onSelect=e,this.closeModal=t,o&&(this.apiKey=o),r&&(this.selectedModels={...r}),this.loadFromStorage(),this.apiKey&&!this.fetched&&this.fetchModels()}render(e){this.root=e,this.update()}update(){if(!this.root)return;this.root.innerHTML="";const e=document.createElement("div");e.className="model-selector-container",e.style.width="100%",e.style.padding="2vw 2vw 2vw 2vw",e.style.background="rgba(255,255,255,0.95)",e.style.borderRadius="1.5rem",e.style.boxShadow="0 4px 32px 0 rgba(0,0,0,0.10), 0 1.5px 6px 0 rgba(0,0,0,0.08)",e.style.display="flex",e.style.flexDirection="column",e.style.gap="1.5rem",e.style.boxSizing="border-box";const t=document.createElement("h2");t.textContent="Configure OpenRouter Models",t.style.fontSize="1.5rem",t.style.fontWeight="bold",t.style.marginBottom="0.5rem",t.style.textAlign="center",t.style.letterSpacing="0.01em",t.style.background="linear-gradient(90deg, #3b82f6 0%, #06b6d4 100%)",t.style.color="white",t.style.borderRadius="1rem",t.style.padding="0.75rem 0",t.style.boxShadow="0 2px 8px 0 rgba(59,130,246,0.10)",e.appendChild(t);const o=document.createElement("div");o.style.display="flex",o.style.flexDirection="column",o.style.gap="0.5rem",o.style.marginBottom="0.5rem";const r=document.createElement("input");r.type="password",r.placeholder="Enter OpenRouter API Key",r.value=this.apiKey,r.style.padding="0.75rem 1rem",r.style.border="1.5px solid #d1d5db",r.style.borderRadius="0.75rem",r.style.fontSize="1rem",r.style.background="#f9fafb",r.style.transition="border-color 0.2s",r.addEventListener("focus",()=>{r.style.borderColor="#3b82f6"}),r.addEventListener("blur",()=>{r.style.borderColor="#d1d5db"}),r.addEventListener("input",i=>{this.apiKey=i.target.value,this.saveToStorage()}),o.appendChild(r);const s=document.createElement("div");s.innerHTML="<strong>Info:</strong> Your API key and model selections are stored in your browser's localStorage. Anyone with access to this browser profile can view them.",s.style.fontSize="0.85rem",s.style.color="#b45309",s.style.background="#fef3c7",s.style.borderRadius="0.5rem",s.style.padding="0.5rem 0.75rem",o.appendChild(s);const l=document.createElement("button");if(l.textContent=this.loading?"Fetching...":"Fetch Models",l.disabled=this.loading||!this.apiKey,l.style.padding="0.75rem 1rem",l.style.background=this.loading||!this.apiKey?"#93c5fd":"linear-gradient(90deg, #3b82f6 0%, #06b6d4 100%)",l.style.color="white",l.style.fontWeight="bold",l.style.border="none",l.style.borderRadius="0.75rem",l.style.fontSize="1rem",l.style.cursor=this.loading||!this.apiKey?"not-allowed":"pointer",l.style.transition="background 0.2s",l.addEventListener("mouseenter",()=>{l.disabled||(l.style.background="linear-gradient(90deg, #2563eb 0%, #0ea5e9 100%)")}),l.addEventListener("mouseleave",()=>{l.disabled||(l.style.background="linear-gradient(90deg, #3b82f6 0%, #06b6d4 100%)")}),l.addEventListener("click",()=>this.fetchModels()),o.appendChild(l),e.appendChild(o),this.error){const i=document.createElement("p");i.textContent=`Error: ${this.error}`,i.style.color="#dc2626",i.style.background="#fee2e2",i.style.borderRadius="0.5rem",i.style.padding="0.5rem 0.75rem",i.style.fontWeight="bold",e.appendChild(i)}if(this.fetched&&!this.loading&&!this.error&&this.models.length>0){const i=document.createElement("div");i.style.display="grid",i.style.gridTemplateColumns="repeat(2, minmax(0, 1fr))",i.style.gap="1.5rem",i.style.width="100%",i.style.boxSizing="border-box",i.style.margin="0 auto",i.style.alignItems="stretch",i.style.justifyItems="stretch",i.style.maxWidth="100%",i.style.padding="0",i.style.gridTemplateRows="auto auto",i.style.gridAutoRows="1fr",i.style.gridAutoFlow="row",O.forEach(f=>{const c=document.createElement("div");c.style.background="#f3f4f6",c.style.border="1.5px solid #d1d5db",c.style.borderRadius="1rem",c.style.padding="1rem 1.25rem",c.style.boxShadow="0 1px 4px 0 rgba(0,0,0,0.04)",c.style.display="flex",c.style.flexDirection="column",c.style.gap="0.5rem",c.style.height="100%";const E=document.createElement("div");E.textContent=`${f.label} Model`,E.style.fontWeight="bold",E.style.marginBottom="0.25rem",c.appendChild(E);const u=document.createElement("select");u.style.padding="0.5rem 1rem",u.style.border="1.5px solid #d1d5db",u.style.borderRadius="0.75rem",u.style.fontSize="1rem",u.style.background="#fff",u.style.transition="border-color 0.2s",u.addEventListener("focus",()=>{u.style.borderColor="#3b82f6"}),u.addEventListener("blur",()=>{u.style.borderColor="#d1d5db"});const C=document.createElement("option");C.value="",C.disabled=!0,C.textContent="Select a model...",u.appendChild(C),this.models.forEach(v=>{const y=document.createElement("option");y.value=v.id,y.textContent=v.name,u.appendChild(y)});const S=this.models.find(v=>v.id===this.selectedModels[f.key]);u.value=S?S.id:"";let b=document.createElement("div"),m;S?(b.textContent=S.description,b.style.fontSize="0.95rem",b.style.color="#374151",b.style.marginTop="0.25rem",c.appendChild(b),S.pricing&&(m=document.createElement("ul"),m.style.listStyle="disc inside",m.style.marginLeft="1.5rem",m.style.marginTop="0.5rem",q(S.pricing).forEach(v=>{const y=document.createElement("li");y.textContent=v,y.style.fontSize="0.9rem",y.style.color="#2563eb",m&&m.appendChild(y)}),c.appendChild(m))):(b.textContent="",c.appendChild(b)),u.addEventListener("change",v=>{this.selectedModels[f.key]=v.target.value,this.saveToStorage();const y=this.models.find(M=>M.id===this.selectedModels[f.key]);b.textContent=y?y.description:"",m&&m.remove(),y&&y.pricing&&(m=document.createElement("ul"),m.style.listStyle="disc inside",m.style.marginLeft="1.5rem",m.style.marginTop="0.5rem",q(y.pricing).forEach(M=>{const R=document.createElement("li");R.textContent=M,R.style.fontSize="0.9rem",R.style.color="#2563eb",m&&m.appendChild(R)}),c.appendChild(m))}),c.appendChild(u),i.appendChild(c)}),e.appendChild(i);const d=document.createElement("div");d.style.display="flex",d.style.justifyContent="flex-end",d.style.gap="1rem",d.style.marginTop="1.5rem";const a=document.createElement("button");a.textContent="Save and Close",a.style.padding="0.75rem 1.5rem",a.style.background="linear-gradient(90deg, #3b82f6 0%, #06b6d4 100%)",a.style.color="white",a.style.fontWeight="bold",a.style.border="none",a.style.borderRadius="0.75rem",a.style.fontSize="1rem",a.style.cursor="pointer",a.addEventListener("click",()=>{this.onSelect(this.selectedModels),this.closeModal()}),d.appendChild(a),e.appendChild(d)}this.root.appendChild(e)}async fetchModels(){this.loading=!0,this.error=null,this.fetched=!1,this.update();try{const e=new J(this.apiKey);this.models=await e.fetchModels();const t=new Set(this.models.map(o=>o.id));for(const o of O)this.selectedModels[o.key]&&!t.has(this.selectedModels[o.key])&&(this.selectedModels[o.key]="");this.fetched=!0}catch(e){this.error=e.message}finally{this.loading=!1,this.update()}}loadFromStorage(){if(!this.apiKey){const e=localStorage.getItem(F);e&&(this.apiKey=e)}if(Object.keys(this.selectedModels).length===0){const e=localStorage.getItem($);if(e)try{this.selectedModels=JSON.parse(e)}catch{}}}saveToStorage(){localStorage.setItem(F,this.apiKey),localStorage.setItem($,JSON.stringify(this.selectedModels))}areAllModelsSelected(){return O.every(e=>this.selectedModels[e.key]&&this.selectedModels[e.key]!=="")}setSelectedModels(e){this.selectedModels={...e},this.saveToStorage(),this.update()}getSelectedModels(){return this.selectedModels}getApiKey(){return this.apiKey}}const j="expert_app_prompts",P={creator_initial:`
        Your task is to respond to the following user prompt: "{{prompt}}"

        Your response will be rated on the following criteria:
        - {{criteria}}

        Please generate a high-quality response that addresses these criteria.
    `.trim(),creator:`
        The user's original prompt was: "{{prompt}}".
        Your last response was: "{{lastResponse}}".
        It received feedback and the editor provided the following advice to improve it: "{{editorAdvice}}".

        Please generate a new response, incorporating the editor's advice. Remember, your response will be rated on these criteria:
        - {{criteria}}
    `.trim(),rater:`
        The user's original prompt was: "{{originalPrompt}}".
        
        Here is a response generated for that prompt: "{{response}}"
        
        Please rate this response on the single criterion of "{{criterion}}".
        The goal is to score at least {{goal}} out of 10.
        
        Provide your response as a JSON object with two keys:
        - "score": A number from 1 to 10.
        - "justification": A brief explanation for your score.

        Example: {"score": 8, "justification": "The response is clear and well-structured."}
    `.trim(),editor:`
        A response was generated: "{{response}}"
        It was rated against several criteria:
        {{ratings}}

        Please provide concise, actionable advice for the Creator LLM on how to improve the response to better meet the rating goals.
        Focus on what needs to change.
    `.trim()};class ie{constructor(e,t){p(this,"prompts");p(this,"onSave");p(this,"root");this.root=e,this.onSave=t,this.prompts=this.loadFromStorage(),this.render()}loadFromStorage(){const e=localStorage.getItem(j);return e?{...P,...JSON.parse(e)}:{...P}}saveToStorage(){localStorage.setItem(j,JSON.stringify(this.prompts)),this.onSave(this.prompts),console.log("Prompts saved.")}revertToDefaults(){confirm("Are you sure you want to revert all prompts to their default values? Any unsaved changes will be lost.")&&(this.prompts={...P},this.render())}getPrompts(){return this.prompts}render(){this.root.innerHTML=`
            <style>
                .prompt-editor { margin-bottom: 1.5rem; }
                .prompt-editor label { font-weight: bold; display: block; margin-bottom: 0.5rem; }
                .prompt-editor textarea { width: 100%; min-height: 200px; font-family: monospace; }
            </style>
            <h2>Configure Prompts</h2>
            <p>Edit the templates used by the LLM agents. Use placeholders like {{prompt}}.</p>
        `,Object.keys(this.prompts).forEach(r=>{const s=r,l=document.createElement("div");l.className="prompt-editor";const i=document.createElement("label");i.textContent=`${s.charAt(0).toUpperCase()+s.slice(1)} Prompt Template`;const d=document.createElement("textarea");d.value=this.prompts[s],d.addEventListener("input",()=>{this.prompts[s]=d.value}),l.appendChild(i),l.appendChild(d),this.root.appendChild(l)});const e=document.createElement("div");e.style.marginTop="1.5rem",e.style.display="flex",e.style.gap="1rem";const t=document.createElement("button");t.textContent="Save and Close",t.addEventListener("click",()=>this.saveToStorage()),e.appendChild(t);const o=document.createElement("button");o.textContent="Revert to Default",o.addEventListener("click",()=>this.revertToDefaults()),e.appendChild(o),this.root.appendChild(e)}}class H{constructor(e,t){p(this,"client");p(this,"prompts");p(this,"stopRequested",!1);this.client=e,this.prompts=t||{...P}}requestStop(){this.stopRequested=!0}async runLoop(e,t){this.stopRequested=!1;const{prompt:o,criteria:r,maxIterations:s}=e,l=[];let i="",d=!1;for(let a=0;a<s&&!this.stopRequested;a++){const f=this.createCreatorPrompt(o,r,a>0?l:void 0);i=await this.client.chat("creator",f);const c={prompt:f,response:i};if(l.push({iteration:a+1,type:"creator",payload:c}),t==null||t({type:"creator",payload:c}),this.stopRequested)break;const E=[];let u=!0;for(const m of r){if(this.stopRequested)break;const v=this.createRatingPrompt(i,m,o),y=await this.client.chat("rating",v),M=this.parseRatingResponse(y,m.name);E.push(M),M.score<m.goal&&(u=!1)}if(this.stopRequested)break;if(l.push({iteration:a+1,type:"rating",payload:{ratings:E}}),t==null||t({type:"rating",payload:{ratings:E}}),u){d=!0;break}if(this.stopRequested)break;const C=this.createEditorPrompt(i,E),S=await this.client.chat("editor",C),b={prompt:C,advice:S};l.push({iteration:a+1,type:"editor",payload:b}),t==null||t({type:"editor",payload:b})}return{finalResponse:i,history:l,iterations:l.filter(a=>a.type==="creator").length,success:d}}createCreatorPrompt(e,t,o){var i,d;const r=t.map(a=>a.name).join("\\n- ");if(!o)return this.prompts.creator_initial.replace("{{prompt}}",e).replace("{{criteria}}",r);const s=((i=o.filter(a=>a.type==="editor").pop())==null?void 0:i.payload.advice)||"No advice was given.",l=(d=o.filter(a=>a.type==="creator").pop())==null?void 0:d.payload.response;return this.prompts.creator.replace("{{prompt}}",e).replace("{{lastResponse}}",l).replace("{{editorAdvice}}",s).replace("{{criteria}}",r)}createRatingPrompt(e,t,o){return this.prompts.rater.replace("{{originalPrompt}}",o).replace("{{response}}",e).replace("{{criterion}}",t.name).replace("{{goal}}",String(t.goal))}parseRatingResponse(e,t){try{let o=null;const r=e.match(/```json\s*(\{[\s\S]*?\})\s*```/);if(r&&r[1])o=r[1];else{const s=e.indexOf("{"),l=e.lastIndexOf("}");s!==-1&&l!==-1&&l>s&&(o=e.substring(s,l+1))}if(o){const s=JSON.parse(o);if(typeof s.score=="number"&&typeof s.justification=="string")return{criterion:t,...s}}}catch(o){console.warn("Could not parse rating response as JSON, using fallback.",{response:e,error:o})}return{criterion:t,score:1,justification:"Could not parse rater response."}}createEditorPrompt(e,t){return this.prompts.editor.replace("{{response}}",e).replace("{{ratings}}",JSON.stringify(t,null,2))}}const T="expert_app_settings_profiles",A="expert_app_last_used_profile";class se{constructor(){p(this,"profiles",{});p(this,"lastUsedProfileName",null);this.loadProfiles(),this.lastUsedProfileName=localStorage.getItem(A)}loadProfiles(){const e=localStorage.getItem(T);e&&(this.profiles=JSON.parse(e))}getProfileNames(){return Object.keys(this.profiles)}getProfile(e){return this.profiles[e]}saveProfile(e,t){if(!e)throw new Error("Profile name cannot be empty.");this.profiles[e]=t,localStorage.setItem(T,JSON.stringify(this.profiles)),this.setLastUsedProfile(e)}deleteProfile(e){delete this.profiles[e],localStorage.setItem(T,JSON.stringify(this.profiles)),this.lastUsedProfileName===e&&(localStorage.removeItem(A),this.lastUsedProfileName=null)}getLastUsedProfile(){if(this.lastUsedProfileName)return this.getProfile(this.lastUsedProfileName);const e=this.getProfileNames();return e.length>0?this.getProfile(e[0]):void 0}getLastUsedProfileName(){if(this.lastUsedProfileName&&this.profiles[this.lastUsedProfileName])return this.lastUsedProfileName;const e=this.getProfileNames();return e.length>0?e[0]:null}setLastUsedProfile(e){this.lastUsedProfileName=e,localStorage.setItem(A,e)}}const L=document.getElementById("initial-setup"),k=document.getElementById("main-app"),z=document.getElementById("configure-models-btn"),G=document.getElementById("configure-prompts-btn"),x=document.getElementById("modal-container"),Y=document.getElementById("modal-content"),w=document.getElementById("prompt-modal-container"),W=document.getElementById("prompt-modal-content");if(!L||!k||!z||!x||!Y||!G||!w||!W)throw new Error("Could not find required DOM elements");let N=null,g=null,D={},I=null,h=null,_={...P};function le(){x&&(x.style.display="flex")}function K(){x&&(x.style.display="none")}function ae(){w&&(w.style.display="flex")}function Q(){w&&(w.style.display="none")}function U(n){console.log("Reconfiguring core services with models:",n),D=n;const e=g==null?void 0:g.getApiKey();e&&(N=new J(e,D),I=new H(N,_),console.log("OpenRouter client and Orchestrator configured."))}function de(n){U(n),K(),L.style.display!=="none"&&(V(),L.style.display="none",k.style.display="block")}function ce(n){_=n,N&&(I=new H(N,_)),Q()}function V(){var n,e,t,o,r,s,l,i,d;k.innerHTML=`
        <style>
            .criterion { display: flex; gap: 1rem; margin-bottom: 0.5rem; align-items: center; }
            .criterion input { flex-grow: 1; }
            #results-container pre { 
                white-space: pre-wrap; 
                word-break: break-all;
            }
            .response-block {
                padding: 1rem;
                border-radius: 8px;
                margin-top: 1rem;
            }
            .response-creator { background-color: #eef8ff; border: 1px solid #cce7ff; }
            .response-rater { background-color: #fffbeb; border: 1px solid #ffe58f; }
            .response-editor { background-color: #f6f0ff; border: 1px solid #e3d0ff; }
            #prompt { width: 100%; min-height: 100px; }
            .settings-bar { display: flex; gap: 1rem; margin-bottom: 1rem; align-items: center; }
        </style>

        <div class="settings-bar">
            <select id="settings-profile-select"></select>
            <input type="text" id="settings-profile-name" placeholder="New Profile Name"/>
            <button id="settings-save-btn">Save</button>
            <button id="settings-delete-btn">Delete</button>
        </div>

        <h2>Application Controls</h2>
        <div>
            <label for="prompt">Your Prompt:</label><br>
            <textarea id="prompt"></textarea>
        </div>
        
        <h3>Quality Criteria</h3>
        <div id="criteria-list">
            <div class="criterion">
                <input type="text" value="Clarity" placeholder="Criterion Name">
                <input type="number" value="8" min="1" max="10" placeholder="Goal (1-10)">
                <button class="remove-criterion-btn">Remove</button>
            </div>
            <div class="criterion">
                <input type="text" value="Friendliness" placeholder="Criterion Name">
                <input type="number" value="9" min="1" max="10" placeholder="Goal (1-10)">
                <button class="remove-criterion-btn">Remove</button>
            </div>
        </div>
        <button id="add-criterion-btn">Add Criterion</button>
        <button id="copy-criteria-btn">Copy Criteria</button>
        <button id="paste-criteria-btn">Paste Criteria</button>
        
        <hr>

        <div>
            <label for="max-iterations">Max Iterations:</label>
            <input type="number" id="max-iterations" min="1" max="20" style="width: 50px;">
        </div>
        
        <button id="start-loop-btn">Start Loop</button>
        <button id="stop-loop-btn" style="display: none;">Stop Loop</button>
        <div id="results-container">
            <div id="live-response-container" class="response-block response-creator" style="display: none;">
                <h3>Live Response</h3>
                <p id="live-response"></p>
            </div>
            <div id="ratings-container" class="response-block response-rater" style="display: none;">
                <h3>Latest Ratings</h3>
                <pre id="ratings"></pre>
            </div>
            <div id="editor-advice-container" class="response-block response-editor" style="display: none;">
                <h3>Editor's Advice</h3>
                <p id="editor-advice"></p>
            </div>
            <div id="final-result-container"></div>
        </div>
    `,(n=document.getElementById("settings-save-btn"))==null||n.addEventListener("click",ye),(e=document.getElementById("settings-delete-btn"))==null||e.addEventListener("click",ge),(t=document.getElementById("settings-profile-select"))==null||t.addEventListener("change",he),(o=document.getElementById("add-criterion-btn"))==null||o.addEventListener("click",()=>{var c;const a=document.getElementById("criteria-list"),f=document.createElement("div");f.className="criterion",f.innerHTML=`
            <input type="text" placeholder="Criterion Name">
            <input type="number" min="1" max="10" placeholder="Goal (1-10)">
            <button class="remove-criterion-btn">Remove</button>
        `,(c=f.querySelector(".remove-criterion-btn"))==null||c.addEventListener("click",()=>f.remove()),a==null||a.appendChild(f)}),(r=document.getElementById("copy-criteria-btn"))==null||r.addEventListener("click",ue),(s=document.getElementById("paste-criteria-btn"))==null||s.addEventListener("click",fe),(l=document.getElementById("criteria-list"))==null||l.addEventListener("click",a=>{var f;a.target.classList.contains("remove-criterion-btn")&&((f=a.target.closest(".criterion"))==null||f.remove())}),(i=document.getElementById("start-loop-btn"))==null||i.addEventListener("click",me),(d=document.getElementById("stop-loop-btn"))==null||d.addEventListener("click",()=>{I&&I.requestStop()}),te()}function B(){const n=document.querySelectorAll("#criteria-list .criterion"),e=[];return n.forEach(t=>{const o=t.querySelector('input[type="text"]'),r=t.querySelector('input[type="number"]');o.value&&r.value&&e.push({name:o.value,goal:parseInt(r.value,10)})}),e}function pe(n){const{type:e,payload:t}=n;if(e==="creator"){const o=document.getElementById("live-response-container"),r=document.getElementById("live-response");o&&r&&(o.style.display="block",r.innerHTML=t.response.replace(/\n/g,"<br>"))}else if(e==="rating"){const o=document.getElementById("ratings-container"),r=document.getElementById("ratings");o&&r&&(o.style.display="block",r.textContent=JSON.stringify(t.ratings,null,2))}else if(e==="editor"){const o=document.getElementById("editor-advice-container"),r=document.getElementById("editor-advice");o&&r&&(o.style.display="block",r.innerHTML=t.advice.replace(/\n/g,"<br>"))}}async function me(){if(!I){alert("Please configure models first.");return}const n=document.getElementById("prompt"),e=B(),t=document.getElementById("max-iterations"),o={prompt:n.value,criteria:e,maxIterations:parseInt(t.value,10)||5},r=document.getElementById("start-loop-btn"),s=document.getElementById("stop-loop-btn");r.style.display="none",s.style.display="inline-block";const l=document.getElementById("results-container"),i=document.getElementById("final-result-container");l&&Array.from(l.children).forEach(d=>d.style.display="none"),i&&(i.style.display="block",i.innerHTML="Looping...");try{const d=await I.runLoop(o,pe);if(i){const a=d.success?"green":"orange";i.style.display="block",i.innerHTML=`
                <h3 style="color: ${a};">Loop Finished (Success: ${d.success})</h3>
                <p>Iterations: ${d.iterations}</p>
                <h3>Final Response:</h3>
                <p>${d.finalResponse.replace(/\n/g,"<br>")}</p>
                <h3>Full History:</h3>
                <pre>${JSON.stringify(d.history,null,2)}</pre>
            `}}catch(d){i&&(i.style.display="block",i.innerHTML=`<p style="color: red;">Error: ${d}</p>`),console.error(d)}finally{r.style.display="inline-block",s.style.display="none"}}function X(n){const e=document.getElementById("criteria-list");e&&(e.innerHTML="",n.forEach(t=>{const o=document.createElement("div");o.className="criterion",o.innerHTML=`
            <input type="text" value="${t.name}" placeholder="Criterion Name">
            <input type="number" value="${t.goal}" min="1" max="10" placeholder="Goal (1-10)">
            <button class="remove-criterion-btn">Remove</button>
        `,e.appendChild(o)}))}async function ue(){const n=B();if(n.length===0){alert("No criteria to copy.");return}try{await navigator.clipboard.writeText(JSON.stringify(n,null,2)),alert("Criteria copied to clipboard!")}catch(e){console.error("Failed to copy criteria: ",e),alert("Failed to copy criteria to clipboard.")}}async function fe(){try{const n=await navigator.clipboard.readText(),e=JSON.parse(n);if(!Array.isArray(e)||!e.every(s=>s.name&&typeof s.goal=="number"))throw new Error("Clipboard does not contain a valid criteria array.");const t=B(),o=new Map;t.forEach(s=>o.set(s.name,s)),e.forEach(s=>o.set(s.name,s));const r=Array.from(o.values());X(r),alert("Criteria pasted and merged!")}catch(n){console.error("Failed to paste criteria: ",n),alert("Failed to paste criteria. Please make sure the clipboard contains a valid JSON array of criteria.")}}function Z(n){document.getElementById("prompt").value=n.prompt,document.getElementById("max-iterations").value=String(n.maxIterations),X(n.criteria)}function ee(){if(!h)return;const n=document.getElementById("settings-profile-select"),e=h.getLastUsedProfileName();n.innerHTML="";const t=h.getProfileNames();if(t.length===0){n.innerHTML="<option disabled>No profiles saved</option>";return}t.forEach(o=>{const r=document.createElement("option");r.value=o,r.textContent=o,o===e&&(r.selected=!0),n.appendChild(r)})}function ye(){if(!h||!g)return;const n=document.getElementById("settings-profile-name"),e=n.value;if(!e){alert("Please enter a name for the settings profile.");return}const t={prompt:document.getElementById("prompt").value,maxIterations:parseInt(document.getElementById("max-iterations").value,10),criteria:B(),selectedModels:g.getSelectedModels()};h.saveProfile(e,t),n.value="",ee()}function he(n){if(!h||!g)return;const t=n.target.value,o=h.getProfile(t);o&&(Z(o),g.setSelectedModels(o.selectedModels),U(o.selectedModels),h.setLastUsedProfile(t))}function ge(){if(!h)return;const e=document.getElementById("settings-profile-select").value;e&&confirm(`Are you sure you want to delete the "${e}" profile?`)&&(h.deleteProfile(e),te())}function te(){if(!h)return;const n=h.getLastUsedProfile();n&&Z(n),ee()}z.addEventListener("click",le);G.addEventListener("click",ae);x.addEventListener("click",n=>{n.target===x&&K()});w.addEventListener("click",n=>{n.target===w&&Q()});g=new ne(de,K);g.render(Y);new ie(W,ce);h=new se;const be=g.getApiKey(),ve=g.areAllModelsSelected();be&&ve?(console.log("Models already configured, showing main app."),U(g.getSelectedModels()),V(),L.style.display="none",k.style.display="block"):(k.style.display="none",L.style.display="block");console.log("Application initialized.");
